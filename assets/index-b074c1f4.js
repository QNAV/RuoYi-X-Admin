import{j as n,a,r as w}from"./jsx-runtime-f6344dff.js";import{bk as x,bl as g,O as f,aw as p,bm as b,aN as T,aM as C,a9 as N,aC as I,aY as m,ae as k}from"./index-015dcaaa.js";import{u as A,e as j}from"./index-758a896a.js";import{b as q,c as E}from"./vanilla-74082e55.js";import{k as U,h as D,m as M,n as F}from"./index-3d8204b8.js";import{u as y}from"./useMutation.esm-f8681d30.js";import{U as L}from"./index-821f0d72.js";import{P}from"./index-12c2951f.js";import{u as O}from"./index-dcec50f9.js";import{P as d}from"./index-73cef862.js";import"./utils.esm-0d150205.js";import"./mutation.esm-7f23d645.js";import"./index-f75ab0a0.js";import"./Skeleton-3a5f4586.js";import"./index-8e574cbc.js";globalThis.jotaiAtomCache=globalThis.jotaiAtomCache||{cache:new Map,get(e,r){return this.cache.has(e)?this.cache.get(e):(this.cache.set(e,r),r)}};const _="https://test-ryx-admin-api.p.quicknav.cn/api/sys/profile/update-avatar",R=[{dataIndex:"userName",key:"userName",title:"用户名称",valueType:"text"},{dataIndex:"deptName",key:"deptName",title:"所属部门",valueType:"text"},{dataIndex:"roleName",key:"roleName",title:"所属角色",valueType:"text"},{dataIndex:"createTime",key:"createTime",title:"创建时间",valueType:"text"}],z=()=>{const{data:e}=j("sys_user_sex");return[{dataIndex:"nickName",key:"nickName",title:"用户昵称",valueType:"text",formItemProps:{rules:[{required:!0,message:"请输入用户昵称"}]}},{dataIndex:"phoneNumber",key:"phoneNumber",title:"手机号码",valueType:"text",fieldProps:{maxLength:11},formItemProps:{rules:[{required:!0,message:"请输入手机号"},{pattern:D,message:"手机号格式错误"}]}},{dataIndex:"email",key:"email",title:"邮箱",valueType:"text",formItemProps:{rules:[{required:!0,message:"请输入邮箱"},{pattern:M,message:"邮箱格式错误"}]}},{dataIndex:"sex",key:"sex",title:"性别",valueType:"radio",valueEnum:(e==null?void 0:e.valueEnum)??{}}]},B=()=>{var t,h;const{data:e,refetch:r}=A(),u=z(),{mutate:c,mutateAsync:s}=y(q,{onSuccess:()=>{r(),p.success("保存成功")}}),i={onSave:async(o,l)=>{await s({[o]:l[o]})}};return n(x,{align:"middle",children:[a(g,{span:4,children:n("div",{className:"w-[100px] relative m-auto",children:[a(f,{src:((h=(t=e==null?void 0:e.userInfo)==null?void 0:t.user)==null?void 0:h.avatar)??"Avatar",size:100}),a(L,{maxCount:1,showUploadList:!1,name:"avatarfile",accept:"image/jpeg,image/png",action:_,headers:{Authorization:U()},onChange:o=>{if(o.file.status!=="done")return;const{code:l,msg:v}=o.file.response;if(l!==200){p.error(v);return}c({avatar:o.file.response.data})},children:a(f,{icon:a(b,{}),className:"absolute bottom-0 right-0 bg-blue-500 cursor-pointer"})})]})}),n(g,{span:20,children:[a(P,{columns:R,dataSource:{userName:e==null?void 0:e.userInfo.user.userName,createTime:e==null?void 0:e.userInfo.user.createTime,deptName:e==null?void 0:e.userInfo.user.dept.deptName,roleName:e==null?void 0:e.userInfo.user.roles.map(o=>o.roleName).join("/")}}),a(T,{}),a(P,{columns:u,dataSource:e==null?void 0:e.userInfo.user,editable:i})]})]})};globalThis.jotaiAtomCache=globalThis.jotaiAtomCache||{cache:new Map,get(e,r){return this.cache.has(e)?this.cache.get(e):(this.cache.set(e,r),r)}};const K=()=>{const e=w.useRef(),r=O(),{mutate:u,isLoading:c}=y(async()=>{var i;const s=await((i=e==null?void 0:e.current)==null?void 0:i.validateFields());await E(s)},{onSuccess:()=>{p.success("密码修改成功，即将自动退出登录并跳转至登录页面");const s=setTimeout(async()=>{await r(),clearTimeout(s)},1500)}});return n(C,{formRef:e,submitter:!1,children:[a(d.Password,{allowClear:!0,name:"oldPassword",label:"旧密码",rules:[{required:!0}],width:"md"}),a(d.Password,{allowClear:!0,name:"newPassword",label:"新密码",width:"md",rules:[{required:!0},{pattern:F,message:"长度在6-20之间，只能包含字母、数字和下划线"},({getFieldValue:s})=>({validator(i,t){return!t||t!==s("oldPassword")?Promise.resolve():Promise.reject(new Error("新旧密码不能相同"))}})]}),a(d.Password,{allowClear:!0,name:"confirmPassword",label:"确认密码",width:"md",rules:[{required:!0},({getFieldValue:s})=>({validator(i,t){return!t||s("newPassword")===t?Promise.resolve():Promise.reject(new Error("两次密码输入不一致"))}})]}),a(N,{type:"primary",loading:c,onClick:()=>u(),children:"更新密码"})]})};globalThis.jotaiAtomCache=globalThis.jotaiAtomCache||{cache:new Map,get(e,r){return this.cache.has(e)?this.cache.get(e):(this.cache.set(e,r),r)}};const te=()=>{const[e,r]=w.useState("PASSWORD");return a(I,{title:"个人中心",children:n(m,{ghost:!0,direction:"column",gutter:[0,16],children:[a(m,{children:a(B,{})}),a(m,{children:a(k,{activeKey:e,onChange:u=>r(u),items:[{label:"安全设置",key:"PASSWORD",children:a(K,{})}]})})]})})};export{te as default};
