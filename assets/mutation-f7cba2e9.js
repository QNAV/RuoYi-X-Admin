import{u as w,q as C,a as R,c as M,b as G}from"./utils-d35e7a32.js";const P=console;class S{destroy(){this.clearGcTimeout()}scheduleGc(){this.clearGcTimeout(),w(this.cacheTime)&&(this.gcTimeout=setTimeout(()=>{this.optionalRemove()},this.cacheTime))}updateCacheTime(t){this.cacheTime=Math.max(this.cacheTime||0,t??(C?1/0:5*60*1e3))}clearGcTimeout(){this.gcTimeout&&(clearTimeout(this.gcTimeout),this.gcTimeout=void 0)}}class k extends S{constructor(t){super(),this.options={...t.defaultOptions,...t.options},this.mutationId=t.mutationId,this.mutationCache=t.mutationCache,this.logger=t.logger||P,this.observers=[],this.state=t.state||F(),this.updateCacheTime(this.options.cacheTime),this.scheduleGc()}get meta(){return this.options.meta}setState(t){this.dispatch({type:"setState",state:t})}addObserver(t){this.observers.indexOf(t)===-1&&(this.observers.push(t),this.clearGcTimeout(),this.mutationCache.notify({type:"observerAdded",mutation:this,observer:t}))}removeObserver(t){this.observers=this.observers.filter(i=>i!==t),this.scheduleGc(),this.mutationCache.notify({type:"observerRemoved",mutation:this,observer:t})}optionalRemove(){this.observers.length||(this.state.status==="loading"?this.scheduleGc():this.mutationCache.remove(this))}continue(){var t,i;return(t=(i=this.retryer)==null?void 0:i.continue())!=null?t:this.execute()}async execute(){const t=()=>{var e;return this.retryer=M({fn:()=>this.options.mutationFn?this.options.mutationFn(this.state.variables):Promise.reject("No mutationFn found"),onFail:(a,T)=>{this.dispatch({type:"failed",failureCount:a,error:T})},onPause:()=>{this.dispatch({type:"pause"})},onContinue:()=>{this.dispatch({type:"continue"})},retry:(e=this.options.retry)!=null?e:0,retryDelay:this.options.retryDelay,networkMode:this.options.networkMode}),this.retryer.promise},i=this.state.status==="loading";try{var s,r,o,n,u,l;if(!i){var h,c,d,f;this.dispatch({type:"loading",variables:this.options.variables}),await((h=(c=this.mutationCache.config).onMutate)==null?void 0:h.call(c,this.state.variables,this));const a=await((d=(f=this.options).onMutate)==null?void 0:d.call(f,this.state.variables));a!==this.state.context&&this.dispatch({type:"loading",context:a,variables:this.state.variables})}const e=await t();return await((s=(r=this.mutationCache.config).onSuccess)==null?void 0:s.call(r,e,this.state.variables,this.state.context,this)),await((o=(n=this.options).onSuccess)==null?void 0:o.call(n,e,this.state.variables,this.state.context)),await((u=(l=this.options).onSettled)==null?void 0:u.call(l,e,null,this.state.variables,this.state.context)),this.dispatch({type:"success",data:e}),e}catch(e){try{var v,p,m,y,b,g;throw await((v=(p=this.mutationCache.config).onError)==null?void 0:v.call(p,e,this.state.variables,this.state.context,this)),await((m=(y=this.options).onError)==null?void 0:m.call(y,e,this.state.variables,this.state.context)),await((b=(g=this.options).onSettled)==null?void 0:b.call(g,void 0,e,this.state.variables,this.state.context)),e}finally{this.dispatch({type:"error",error:e})}}}dispatch(t){const i=s=>{switch(t.type){case"failed":return{...s,failureCount:t.failureCount,failureReason:t.error};case"pause":return{...s,isPaused:!0};case"continue":return{...s,isPaused:!1};case"loading":return{...s,context:t.context,data:void 0,failureCount:0,failureReason:null,error:null,isPaused:!G(this.options.networkMode),status:"loading",variables:t.variables};case"success":return{...s,data:t.data,failureCount:0,failureReason:null,error:null,status:"success",isPaused:!1};case"error":return{...s,data:void 0,error:t.error,failureCount:s.failureCount+1,failureReason:t.error,isPaused:!1,status:"error"};case"setState":return{...s,...t.state}}};this.state=i(this.state),R.batch(()=>{this.observers.forEach(s=>{s.onMutationUpdate(t)}),this.mutationCache.notify({mutation:this,type:"updated",action:t})})}}function F(){return{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0}}export{k as M,S as R,P as d,F as g};
